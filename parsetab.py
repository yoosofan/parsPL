
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'sourceOfaFileleftPLUSMINUSleftTIMESDIVIDErightUMINUSrightNEWLINECOMMA COMMENT1 DIVIDE ELSE EQ EQUALS FUNCTION GE GT ID IDOBJECT IF LBRACE LBRACKET LE LITERAL LPAREN LT MINUS NE NEWLINE NUMBER PLUS RBRACE RBRACKET RETURN RPAREN TIMES WHILEsourceOfaFile : stmtsstmts : stmt stmts\n             | stmtsuite : NEWLINE statement\n             | newLineOrEmpty LBRACE stmts RBRACE newLineOrEmptystmt : newLineOrEmpty statementstatement : IF comparison suite\n               | IF comparison suite ELSE suite\n  statement : WHILE comparison suitenewLineOrEmpty : NEWLINE  newLineOrEmpty\n                    |statement : FUNCTION ID LPAREN paramList RPAREN suitestatement : lvalue EQUALS expression NEWLINEstatement : RETURN expression NEWLINEstatement : expression NEWLINEparamList : params\n             |params : ID COMMA params\n          | IDcomparison : expression EQ expression\n                | expression NE expression\n                | expression GT expression\n                | expression GE expression\n                | expression LT expression\n                | expression LE expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : ID LPAREN argList RPAREN argList : args\n             |args : expression COMMA args\n          | expressionexpression : NUMBERexpression : lvalueexpression : LITERALlvalue : ID\n            | ID LBRACKET indexList RBRACKETindexList : indexes\n             |indexes : expression COMMA indexes\n          | expression'
    
_lr_action_items = {'NEWLINE':([0,3,5,7,11,13,14,17,18,19,20,22,23,24,30,35,36,37,38,46,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,75,77,78,81,84,86,87,],[5,5,5,-6,-40,-38,30,-37,-39,-10,38,-40,-38,38,-15,60,-30,-7,5,-9,-31,77,-26,-27,-28,-29,-14,38,-4,5,-20,-21,-22,-23,-24,-25,-41,-32,-13,-8,38,5,-12,-5,]),'IF':([0,3,4,5,7,19,30,37,38,46,60,62,63,77,78,84,86,87,],[-11,-11,8,-11,-6,-10,-15,-7,8,-9,-14,-4,-11,-13,-8,-11,-12,-5,]),'WHILE':([0,3,4,5,7,19,30,37,38,46,60,62,63,77,78,84,86,87,],[-11,-11,9,-11,-6,-10,-15,-7,9,-9,-14,-4,-11,-13,-8,-11,-12,-5,]),'FUNCTION':([0,3,4,5,7,19,30,37,38,46,60,62,63,77,78,84,86,87,],[-11,-11,10,-11,-6,-10,-15,-7,10,-9,-14,-4,-11,-13,-8,-11,-12,-5,]),'RETURN':([0,3,4,5,7,19,30,37,38,46,60,62,63,77,78,84,86,87,],[-11,-11,15,-11,-6,-10,-15,-7,15,-9,-14,-4,-11,-13,-8,-11,-12,-5,]),'ID':([0,3,4,5,7,8,9,10,12,15,16,19,26,27,29,30,31,32,33,34,37,38,40,41,42,43,44,45,46,47,60,62,63,74,76,77,78,80,84,86,87,],[-11,-11,11,-11,-6,22,22,25,22,22,22,-10,22,22,22,-15,22,22,22,22,-7,11,22,22,22,22,22,22,-9,70,-14,-4,-11,22,22,-13,-8,70,-11,-12,-5,]),'MINUS':([0,3,4,5,7,8,9,11,12,13,14,15,16,17,18,19,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,50,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,73,74,75,76,77,78,84,86,87,],[-11,-11,16,-11,-6,16,16,-40,16,-38,32,16,16,-37,-39,-10,32,-40,-38,16,16,32,16,-15,16,16,16,16,32,-30,-7,16,16,16,16,16,16,16,-9,32,32,-31,32,-26,-27,-28,-29,-14,-4,-11,32,32,32,32,32,32,-41,16,-32,16,-13,-8,-11,-12,-5,]),'LPAREN':([0,3,4,5,7,8,9,11,12,15,16,19,22,25,26,27,29,30,31,32,33,34,37,38,40,41,42,43,44,45,46,60,62,63,74,76,77,78,84,86,87,],[-11,-11,12,-11,-6,12,12,27,12,12,12,-10,27,47,12,12,12,-15,12,12,12,12,-7,12,12,12,12,12,12,12,-9,-14,-4,-11,12,12,-13,-8,-11,-12,-5,]),'NUMBER':([0,3,4,5,7,8,9,12,15,16,19,26,27,29,30,31,32,33,34,37,38,40,41,42,43,44,45,46,60,62,63,74,76,77,78,84,86,87,],[-11,-11,17,-11,-6,17,17,17,17,17,-10,17,17,17,-15,17,17,17,17,-7,17,17,17,17,17,17,17,-9,-14,-4,-11,17,17,-13,-8,-11,-12,-5,]),'LITERAL':([0,3,4,5,7,8,9,12,15,16,19,26,27,29,30,31,32,33,34,37,38,40,41,42,43,44,45,46,60,62,63,74,76,77,78,84,86,87,],[-11,-11,18,-11,-6,18,18,18,18,18,-10,18,18,18,-15,18,18,18,18,-7,18,18,18,18,18,18,18,-9,-14,-4,-11,18,18,-13,-8,-11,-12,-5,]),'$end':([1,2,3,5,6,7,19,30,37,46,60,62,77,78,84,86,87,],[0,-1,-3,-11,-2,-6,-10,-15,-7,-9,-14,-4,-13,-8,-11,-12,-5,]),'RBRACE':([3,5,6,7,19,30,37,46,60,62,77,78,79,84,86,87,],[-3,-11,-2,-6,-10,-15,-7,-9,-14,-4,-13,-8,84,-11,-12,-5,]),'LBRACE':([5,17,18,19,20,22,23,24,36,38,39,54,56,57,58,59,61,64,65,66,67,68,69,73,75,81,],[-11,-37,-39,-10,-11,-40,-38,-11,-30,-11,63,-31,-26,-27,-28,-29,-11,-20,-21,-22,-23,-24,-25,-41,-32,-11,]),'ELSE':([5,19,30,37,46,60,62,77,78,84,86,87,],[-11,-10,-15,61,-9,-14,-4,-13,-8,-11,-12,-5,]),'EQUALS':([11,13,73,],[-40,29,-41,]),'PLUS':([11,13,14,17,18,21,22,23,28,35,36,50,53,54,55,56,57,58,59,64,65,66,67,68,69,73,75,],[-40,-38,31,-37,-39,31,-40,-38,31,31,-30,31,31,-31,31,-26,-27,-28,-29,31,31,31,31,31,31,-41,-32,]),'TIMES':([11,13,14,17,18,21,22,23,28,35,36,50,53,54,55,56,57,58,59,64,65,66,67,68,69,73,75,],[-40,-38,33,-37,-39,33,-40,-38,33,33,-30,33,33,-31,33,33,33,-28,-29,33,33,33,33,33,33,-41,-32,]),'DIVIDE':([11,13,14,17,18,21,22,23,28,35,36,50,53,54,55,56,57,58,59,64,65,66,67,68,69,73,75,],[-40,-38,34,-37,-39,34,-40,-38,34,34,-30,34,34,-31,34,34,34,-28,-29,34,34,34,34,34,34,-41,-32,]),'LBRACKET':([11,22,],[26,26,]),'EQ':([17,18,21,22,23,36,54,56,57,58,59,73,75,],[-37,-39,40,-40,-38,-30,-31,-26,-27,-28,-29,-41,-32,]),'NE':([17,18,21,22,23,36,54,56,57,58,59,73,75,],[-37,-39,41,-40,-38,-30,-31,-26,-27,-28,-29,-41,-32,]),'GT':([17,18,21,22,23,36,54,56,57,58,59,73,75,],[-37,-39,42,-40,-38,-30,-31,-26,-27,-28,-29,-41,-32,]),'GE':([17,18,21,22,23,36,54,56,57,58,59,73,75,],[-37,-39,43,-40,-38,-30,-31,-26,-27,-28,-29,-41,-32,]),'LT':([17,18,21,22,23,36,54,56,57,58,59,73,75,],[-37,-39,44,-40,-38,-30,-31,-26,-27,-28,-29,-41,-32,]),'LE':([17,18,21,22,23,36,54,56,57,58,59,73,75,],[-37,-39,45,-40,-38,-30,-31,-26,-27,-28,-29,-41,-32,]),'RPAREN':([17,18,22,23,27,28,36,47,51,52,53,54,56,57,58,59,70,71,72,73,75,83,85,],[-37,-39,-40,-38,-34,54,-30,-17,75,-33,-36,-31,-26,-27,-28,-29,-19,81,-16,-41,-32,-35,-18,]),'COMMA':([17,18,22,23,36,50,53,54,56,57,58,59,70,73,75,],[-37,-39,-40,-38,-30,74,76,-31,-26,-27,-28,-29,80,-41,-32,]),'RBRACKET':([17,18,22,23,26,36,48,49,50,54,56,57,58,59,73,75,82,],[-37,-39,-40,-38,-43,-30,73,-42,-45,-31,-26,-27,-28,-29,-41,-32,-44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sourceOfaFile':([0,],[1,]),'stmts':([0,3,63,],[2,6,79,]),'stmt':([0,3,63,],[3,3,3,]),'newLineOrEmpty':([0,3,5,20,24,38,61,63,81,84,],[4,4,19,39,39,19,39,4,39,87,]),'statement':([4,38,],[7,62,]),'lvalue':([4,8,9,12,15,16,26,27,29,31,32,33,34,38,40,41,42,43,44,45,74,76,],[13,23,23,23,23,23,23,23,23,23,23,23,23,13,23,23,23,23,23,23,23,23,]),'expression':([4,8,9,12,15,16,26,27,29,31,32,33,34,38,40,41,42,43,44,45,74,76,],[14,21,21,28,35,36,50,53,55,56,57,58,59,14,64,65,66,67,68,69,50,53,]),'comparison':([8,9,],[20,24,]),'suite':([20,24,61,81,],[37,46,78,86,]),'indexList':([26,],[48,]),'indexes':([26,74,],[49,82,]),'argList':([27,],[51,]),'args':([27,76,],[52,83,]),'paramList':([47,],[71,]),'params':([47,80,],[72,85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sourceOfaFile","S'",1,None,None,None),
  ('sourceOfaFile -> stmts','sourceOfaFile',1,'p_sourceOfaFile','parserParsPL.py',113),
  ('stmts -> stmt stmts','stmts',2,'p_stmts','parserParsPL.py',117),
  ('stmts -> stmt','stmts',1,'p_stmts','parserParsPL.py',118),
  ('suite -> NEWLINE statement','suite',2,'p_suite','parserParsPL.py',125),
  ('suite -> newLineOrEmpty LBRACE stmts RBRACE newLineOrEmpty','suite',5,'p_suite','parserParsPL.py',126),
  ('stmt -> newLineOrEmpty statement','stmt',2,'p_stmt','parserParsPL.py',132),
  ('statement -> IF comparison suite','statement',3,'p_statement_if','parserParsPL.py',136),
  ('statement -> IF comparison suite ELSE suite','statement',5,'p_statement_if','parserParsPL.py',137),
  ('statement -> WHILE comparison suite','statement',3,'p_statement_while','parserParsPL.py',149),
  ('newLineOrEmpty -> NEWLINE newLineOrEmpty','newLineOrEmpty',2,'p_newLineOrEmpty','parserParsPL.py',152),
  ('newLineOrEmpty -> <empty>','newLineOrEmpty',0,'p_newLineOrEmpty','parserParsPL.py',153),
  ('statement -> FUNCTION ID LPAREN paramList RPAREN suite','statement',6,'p_statement_definitionOfFunction','parserParsPL.py',157),
  ('statement -> lvalue EQUALS expression NEWLINE','statement',4,'p_statement_assign','parserParsPL.py',161),
  ('statement -> RETURN expression NEWLINE','statement',3,'p_statement_return','parserParsPL.py',164),
  ('statement -> expression NEWLINE','statement',2,'p_statement_exprs','parserParsPL.py',167),
  ('paramList -> params','paramList',1,'p_paramList','parserParsPL.py',171),
  ('paramList -> <empty>','paramList',0,'p_paramList','parserParsPL.py',172),
  ('params -> ID COMMA params','params',3,'p_params','parserParsPL.py',176),
  ('params -> ID','params',1,'p_params','parserParsPL.py',177),
  ('comparison -> expression EQ expression','comparison',3,'p_comparison','parserParsPL.py',187),
  ('comparison -> expression NE expression','comparison',3,'p_comparison','parserParsPL.py',188),
  ('comparison -> expression GT expression','comparison',3,'p_comparison','parserParsPL.py',189),
  ('comparison -> expression GE expression','comparison',3,'p_comparison','parserParsPL.py',190),
  ('comparison -> expression LT expression','comparison',3,'p_comparison','parserParsPL.py',191),
  ('comparison -> expression LE expression','comparison',3,'p_comparison','parserParsPL.py',192),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parserParsPL.py',200),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parserParsPL.py',201),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parserParsPL.py',202),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parserParsPL.py',203),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parserParsPL.py',211),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parserParsPL.py',223),
  ('expression -> ID LPAREN argList RPAREN','expression',4,'p_expression_fcal','parserParsPL.py',227),
  ('argList -> args','argList',1,'p_argList','parserParsPL.py',230),
  ('argList -> <empty>','argList',0,'p_argList','parserParsPL.py',231),
  ('args -> expression COMMA args','args',3,'p_args','parserParsPL.py',235),
  ('args -> expression','args',1,'p_args','parserParsPL.py',236),
  ('expression -> NUMBER','expression',1,'p_expression_number','parserParsPL.py',240),
  ('expression -> lvalue','expression',1,'p_expression_id','parserParsPL.py',243),
  ('expression -> LITERAL','expression',1,'p_expression_literal','parserParsPL.py',246),
  ('lvalue -> ID','lvalue',1,'p_lvalue','parserParsPL.py',249),
  ('lvalue -> ID LBRACKET indexList RBRACKET','lvalue',4,'p_lvalue','parserParsPL.py',250),
  ('indexList -> indexes','indexList',1,'p_indexList','parserParsPL.py',255),
  ('indexList -> <empty>','indexList',0,'p_indexList','parserParsPL.py',256),
  ('indexes -> expression COMMA indexes','indexes',3,'p_indexes','parserParsPL.py',260),
  ('indexes -> expression','indexes',1,'p_indexes','parserParsPL.py',261),
]
