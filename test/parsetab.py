
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = b"n\x0b\x99T\xcfY\xf6\xe4\xf8\nvPXQ'\xc1"
    
_lr_action_items = {'PLUS':([8,10,11,15,21,23,24,25,26,27,28,],[-12,-13,19,19,-10,19,-11,-9,-8,-6,-7,]),'RPAREN':([8,10,15,21,24,25,26,27,28,],[-12,-13,24,-10,-11,-9,-8,-6,-7,]),'DIVIDE':([8,10,11,15,21,23,24,25,26,27,28,],[-12,-13,16,16,-10,16,-11,-9,-8,16,16,]),'NEWLINE':([0,2,8,10,11,13,21,23,24,25,26,27,28,],[1,7,-12,-13,17,22,-10,29,-11,-9,-8,-6,-7,]),'NUMBER':([4,9,12,14,16,18,19,20,],[8,8,8,8,8,8,8,8,]),'MINUS':([4,8,9,10,11,12,14,15,16,18,19,20,21,23,24,25,26,27,28,],[12,-12,12,-13,20,12,12,20,12,12,12,12,-10,20,-11,-9,-8,-6,-7,]),'EQUALS':([6,],[14,]),'EXIT':([0,],[2,]),'LPAREN':([4,9,12,14,16,18,19,20,],[9,9,9,9,9,9,9,9,]),'PRINT':([0,],[4,]),'INPUT':([0,],[5,]),'TIMES':([8,10,11,15,21,23,24,25,26,27,28,],[-12,-13,18,18,-10,18,-11,-9,-8,18,18,]),'ID':([0,4,5,9,12,14,16,18,19,20,],[6,10,13,10,10,10,10,10,10,10,]),'$end':([1,3,7,17,22,29,],[-5,0,-4,-2,-3,-1,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([4,9,12,14,16,18,19,20,],[11,15,21,23,25,26,27,28,]),'statement':([0,],[3,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> ID EQUALS expression NEWLINE','statement',4,'p_statement_assign','interpreter_1.py',111),
  ('statement -> PRINT expression NEWLINE','statement',3,'p_statement_print','interpreter_1.py',117),
  ('statement -> INPUT ID NEWLINE','statement',3,'p_statement_input','interpreter_1.py',122),
  ('statement -> EXIT NEWLINE','statement',2,'p_statement_exit','interpreter_1.py',127),
  ('statement -> NEWLINE','statement',1,'p_statement_newline','interpreter_1.py',132),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','interpreter_1.py',136),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','interpreter_1.py',137),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','interpreter_1.py',138),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','interpreter_1.py',139),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','interpreter_1.py',146),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','interpreter_1.py',150),
  ('expression -> NUMBER','expression',1,'p_expression_number','interpreter_1.py',154),
  ('expression -> ID','expression',1,'p_expression_id','interpreter_1.py',158),
]
